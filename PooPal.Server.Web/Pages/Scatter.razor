@page "/chart"
@inject HttpClient Http

@using PooPal.Server.Common
@using Microsoft.JSInterop

@inject IJSRuntime JS
@implements IAsyncDisposable


<div @ref="chartElement" style="width:1000px; height:800px;"></div>



@if (pooDetections == null)
{
    <p><em>Loading...</em></p>
}

@code {
    ElementReference chartElement;
    IJSObjectReference renderChartsModule;
    bool firstRender = true;

    private PooDetectionResponseModel[] pooDetections;

    protected override async Task OnInitializedAsync()
    {
        var deviceId = "prototype1";
        pooDetections = await Http.GetFromJsonAsync<PooDetectionResponseModel[]>($"api/GetPooStatus?deviceId={deviceId}");


        if (firstRender)
        {
            renderChartsModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/render_charts.js");

            var data = pooDetections.Select(pooEvent =>
            {
                var localStartTime = pooEvent.PooStart.ToLocalTime();
                var minuteOfTheDay = (localStartTime.Hour * 60.0 + localStartTime.Minute) / (60.0);
                return new object[] { minuteOfTheDay, pooEvent.PooDuration, localStartTime.ToString() };
            }).ToArray();

            await renderChartsModule.InvokeVoidAsync("scatter_chart_init", chartElement, data);
            firstRender = false;
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        await renderChartsModule.DisposeAsync();
    }
}
